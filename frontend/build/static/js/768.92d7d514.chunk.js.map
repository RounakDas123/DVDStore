{"version":3,"file":"static/js/768.92d7d514.chunk.js","mappings":"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","sources":["webpack://frontend/./src/home/components/CarouselContainer.module.css?95fa","webpack://frontend/./src/home/components/Pagination.module.css?0f02","home/components/Pagination.js","home/components/CarouselContainer.js","webpack://frontend/./src/home/pages/Home.module.css?fd59","home/pages/Home.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"carousel-container\":\"CarouselContainer_carousel-container__EWEyY\",\"heading-container\":\"CarouselContainer_heading-container__hPB7S\",\"heading\":\"CarouselContainer_heading__2ZE+G\"};","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__OyAB2\",\"pageButton\":\"Pagination_pageButton__IU4zr\",\"active\":\"Pagination_active__MLWfQ\"};","import React from \"react\";\r\nimport classes from \"./Pagination.module.css\";\r\n\r\nconst Pagination = ({ currentPage, totalPages = 10, onPageChange }) => {\r\n  const handlePageChange = (event, page) => {\r\n    event.preventDefault();\r\n    onPageChange(page);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.pagination}>\r\n      {[...Array(totalPages)].map((_, index) => (\r\n        <button\r\n          key={index}\r\n          className={`${classes.pageButton} ${\r\n            currentPage === index + 1 ? classes.active : \"\"\r\n          }`}\r\n          onClick={(event) => handlePageChange(event, index + 1)}\r\n        >\r\n          {index + 1}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport Carousel from \"./Carousel\";\r\nimport classes from \"./CarouselContainer.module.css\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst CarouselContainer = ({\r\n  id,\r\n  heading,\r\n  movieList,\r\n  type,\r\n  currentPage,\r\n  onPageChange,\r\n}) => {\r\n  return (\r\n    <div id={id} className={classes[\"carousel-container\"]}>\r\n      <div className={classes[\"heading-container\"]}>\r\n        <h2 className={classes.heading}>{heading}</h2>\r\n      </div>\r\n      <Carousel movieList={movieList} type={type} />\r\n      <Pagination currentPage={currentPage} onPageChange={onPageChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarouselContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button-container\":\"Home_button-container__rW+B+\",\"homebutton\":\"Home_homebutton__xYuH3\",\"active\":\"Home_active__+09HJ\",\"body\":\"Home_body__aJxZN\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nimport LoadingSpinner from \"../../shared/components/loader/LoadingSpinner\";\r\nimport CarouselContainer from \"../components/CarouselContainer\";\r\nimport classes from \"./Home.module.css\";\r\n\r\nconst Home = () => {\r\n  const [nowPlaying, setNowPlaying] = useState([]);\r\n  const [trending, setTrending] = useState([]);\r\n  const [topRated, setTopRated] = useState([]);\r\n  const [upcoming, setUpcoming] = useState([]);\r\n  const [onTheAir, setOnTheAir] = useState([]);\r\n  const [trendingTv, setTrendingTv] = useState([]);\r\n  const [topRatedTv, setTopRatedTv] = useState([]);\r\n  const [contentType, setContentType] = useState(\"movie\");\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  const [currentPage, setCurrentPage] = useState({\r\n    nowPlaying: 1,\r\n    trending: 1,\r\n    topRated: 1,\r\n    upcoming: 1,\r\n    onTheAir: 1,\r\n    trendingTv: 1,\r\n    topRatedTv: 1,\r\n  });\r\n\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  function checkData(data) {\r\n    if (contentType === \"movie\") {\r\n      return (\r\n        data.poster_path && data.title && data.vote_average && data.overview\r\n      );\r\n    } else if (contentType === \"tv\") {\r\n      return (\r\n        data.poster_path && data.name && data.vote_average && data.overview\r\n      );\r\n    }\r\n  }\r\n\r\n  const handlePageChange = (type, page) => {\r\n    setCurrentPage((prev) => ({ ...prev, [type]: page }));\r\n\r\n    setTimeout(() => {\r\n      const targetCarousel = document.getElementById(`${type}`);\r\n\r\n      if (targetCarousel) {\r\n        targetCarousel.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n      } else {\r\n        console.error(\"Element not found for ID:\", type);\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        if (contentType === \"movie\") {\r\n          setLoader(true);\r\n          const nowPlayingResponse = await fetch(\r\n            `https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=${currentPage.nowPlaying}&api_key=${apiKey}`\r\n          );\r\n          const nowPlayingData = await nowPlayingResponse.json();\r\n          setNowPlaying(nowPlayingData.results.filter(checkData));\r\n\r\n          const trendingResponse = await fetch(\r\n            `https://api.themoviedb.org/3/trending/movie/week?language=en-US&page=${currentPage.trending}&api_key=${apiKey}`\r\n          );\r\n          const trendingData = await trendingResponse.json();\r\n          setTrending(trendingData.results.filter(checkData));\r\n\r\n          const topRatedResponse = await fetch(\r\n            `https://api.themoviedb.org/3/movie/top_rated?language=en-US&page=${currentPage.topRated}&api_key=${apiKey}`\r\n          );\r\n          const topRatedData = await topRatedResponse.json();\r\n          setTopRated(topRatedData.results.filter(checkData));\r\n\r\n          const upcomingResponse = await fetch(\r\n            `https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=${currentPage.upcoming}&api_key=${apiKey}`\r\n          );\r\n          const upcomingData = await upcomingResponse.json();\r\n          setUpcoming(upcomingData.results.filter(checkData));\r\n\r\n          setLoader(false);\r\n        } else if (contentType === \"tv\") {\r\n          setLoader(true);\r\n          const onTheAirResponse = await fetch(\r\n            `https://api.themoviedb.org/3/tv/on_the_air?language=en-US&page=${currentPage.onTheAir}&api_key=${apiKey}`\r\n          );\r\n          const onTheAirData = await onTheAirResponse.json();\r\n          setOnTheAir(onTheAirData.results.filter(checkData));\r\n\r\n          const trendingTvResponse = await fetch(\r\n            `https://api.themoviedb.org/3/trending/tv/week?language=en-US&page=${currentPage.trendingTv}&api_key=${apiKey}`\r\n          );\r\n          const trendingTvData = await trendingTvResponse.json();\r\n          setTrendingTv(trendingTvData.results.filter(checkData));\r\n\r\n          const topRatedTvResponse = await fetch(\r\n            `https://api.themoviedb.org/3/tv/top_rated?&language=en-US&page=${currentPage.topRatedTv}&api_key=${apiKey}`\r\n          );\r\n          const topRatedTvData = await topRatedTvResponse.json();\r\n          setTopRatedTv(topRatedTvData.results.filter(checkData));\r\n\r\n          setLoader(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching movies:\", error);\r\n        setLoader(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, [\r\n    currentPage.nowPlaying,\r\n    currentPage.trending,\r\n    currentPage.topRated,\r\n    currentPage.upcoming,\r\n    currentPage.onTheAir,\r\n    currentPage.trendingTv,\r\n    currentPage.topRatedTv,\r\n    contentType,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes[\"button-container\"]}>\r\n        <button\r\n          className={`${classes.homebutton} ${\r\n            contentType === \"movie\" ? classes.active : \"\"\r\n          }`}\r\n          onClick={() => setContentType(\"movie\")}\r\n        >\r\n          Movies\r\n        </button>\r\n        <button\r\n          className={`${classes.homebutton} ${\r\n            contentType === \"tv\" ? classes.active : \"\"\r\n          }`}\r\n          onClick={() => setContentType(\"tv\")}\r\n        >\r\n          TV-Series\r\n        </button>\r\n      </div>\r\n\r\n      {loader ? (\r\n        <LoadingSpinner />\r\n      ) : contentType === \"movie\" ? (\r\n        <>\r\n          <CarouselContainer\r\n            id=\"nowPlaying\"\r\n            heading=\"Now Playing\"\r\n            movieList={nowPlaying}\r\n            type={contentType}\r\n            currentPage={currentPage.nowPlaying}\r\n            onPageChange={(page) => handlePageChange(\"nowPlaying\", page)}\r\n          />\r\n\r\n          <CarouselContainer\r\n            id=\"trending\"\r\n            heading=\"Trending\"\r\n            movieList={trending}\r\n            type={contentType}\r\n            currentPage={currentPage.trending}\r\n            onPageChange={(page) => handlePageChange(\"trending\", page)}\r\n          />\r\n\r\n          <CarouselContainer\r\n            id=\"topRated\"\r\n            heading=\"Top Rated\"\r\n            movieList={topRated}\r\n            type={contentType}\r\n            currentPage={currentPage.topRated}\r\n            onPageChange={(page) => handlePageChange(\"topRated\", page)}\r\n          />\r\n\r\n          <CarouselContainer\r\n            id=\"upcoming\"\r\n            heading=\"Upcoming\"\r\n            movieList={upcoming}\r\n            type={contentType}\r\n            currentPage={currentPage.upcoming}\r\n            onPageChange={(page) => handlePageChange(\"upcoming\", page)}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CarouselContainer\r\n            id=\"onTheAir\"\r\n            heading=\"On the Air\"\r\n            movieList={onTheAir}\r\n            type={contentType}\r\n            currentPage={currentPage.onTheAir}\r\n            onPageChange={(page) => handlePageChange(\"onTheAir\", page)}\r\n          />\r\n\r\n          <CarouselContainer\r\n            id=\"trendingTv\"\r\n            heading=\"Trending\"\r\n            movieList={trendingTv}\r\n            type={contentType}\r\n            currentPage={currentPage.trendingTv}\r\n            onPageChange={(page) => handlePageChange(\"trendingTv\", page)}\r\n          />\r\n\r\n          <CarouselContainer\r\n            id=\"topRatedTv\"\r\n            heading=\"Top Rated\"\r\n            movieList={topRatedTv}\r\n            type={contentType}\r\n            currentPage={currentPage.topRatedTv}\r\n            onPageChange={(page) => handlePageChange(\"topRatedTv\", page)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_ref","currentPage","totalPages","onPageChange","_jsx","className","classes","children","Array","map","_","index","onClick","event","handlePageChange","page","preventDefault","id","heading","movieList","type","_jsxs","Carousel","Pagination","Home","nowPlaying","setNowPlaying","useState","trending","setTrending","topRated","setTopRated","upcoming","setUpcoming","onTheAir","setOnTheAir","trendingTv","setTrendingTv","topRatedTv","setTopRatedTv","contentType","setContentType","loader","setLoader","setCurrentPage","apiKey","process","checkData","data","poster_path","title","vote_average","overview","name","prev","setTimeout","targetCarousel","document","getElementById","scrollIntoView","behavior","block","console","error","useEffect","async","nowPlayingResponse","fetch","nowPlayingData","json","results","filter","trendingResponse","trendingData","topRatedResponse","topRatedData","upcomingResponse","upcomingData","onTheAirResponse","onTheAirData","trendingTvResponse","trendingTvData","topRatedTvResponse","topRatedTvData","fetchMovies","_Fragment","LoadingSpinner","CarouselContainer"],"sourceRoot":""}