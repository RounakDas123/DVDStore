{"version":3,"file":"static/js/473.460771b4.chunk.js","mappings":"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","sources":["webpack://frontend/./src/login-signup/pages/Login.module.css?9527","login-signup/pages/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body-style\":\"Login_body-style__49xcy\",\"container\":\"Login_container__z4HMl\",\"container-root\":\"Login_container-root__zQaIq\",\"cover\":\"Login_cover__Njwdt\",\"flip\":\"Login_flip__sJgAC\",\"back\":\"Login_back__7EEoW\",\"form-content\":\"Login_form-content__l8Y+I\",\"login-form\":\"Login_login-form__BhMEK\",\"signup-form\":\"Login_signup-form__KhX0S\",\"title\":\"Login_title__CHWQq\",\"input-boxes\":\"Login_input-boxes__aYeLz\",\"input-box\":\"Login_input-box__o1pzV\",\"glow\":\"Login_glow__togpY\",\"text\":\"Login_text__48eeo\",\"button\":\"Login_button__F4E63\",\"sign-up-text\":\"Login_sign-up-text__iki-i\",\"login-text\":\"Login_login-text__DeIfJ\",\"control-error\":\"Login_control-error__ZRnID\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  cardbuttonsActions,\r\n  userInfoActions,\r\n  wishlistCartActions,\r\n} from \"../../store\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = () => {\r\n  useEffect(() => {\r\n    document.body.classList.add(`${classes[\"body-style\"]}`); // here explicitly setting the style for body, root for this component only.\r\n    document\r\n      .getElementById(\"root\")\r\n      .classList.add(`${classes[\"container-root\"]}`);\r\n  }, []);\r\n\r\n  const navigate = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginValues, setLoginValues] = useState({\r\n    //for updating state of login page inputs\r\n    email: \"\",\r\n    password: \"\",\r\n    pwd_show: true,\r\n  });\r\n\r\n  const [signupValues, setSignupValues] = useState({\r\n    //for updating state of signup page inputs\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    pwd_show: true,\r\n    conf_pwd_show: true,\r\n  });\r\n\r\n  const [pwdNotEqual, setPwdNotEqual] = useState(false);\r\n\r\n  const [didEdit, setDidEdit] = useState({\r\n    //used for checking if input is edited, i.e. losing focus or not\r\n    login: {\r\n      email: false,\r\n    },\r\n    signup: {\r\n      name: false,\r\n      email: false,\r\n    },\r\n  });\r\n\r\n  const emailLoginIsInvalid =\r\n    didEdit.login.email && !loginValues.email.includes(\"@\"); //for validation login email\r\n  const nameSignupIsInvalid =\r\n    didEdit.signup.name && !signupValues.name.match(/^[a-zA-Z]+$/); //for validation signup name\r\n  const emailSignupIsInvalid =\r\n    didEdit.signup.email && !signupValues.email.includes(\"@\"); //for validation signup email\r\n\r\n  async function handleSubmit(event) {\r\n    // this function is called when submitting the form\r\n    event.preventDefault();\r\n    var buttonName = event.nativeEvent.submitter.name;\r\n    if (buttonName === \"login\") {\r\n      try {\r\n        console.log(\"Environment Variables:\", process.env);\r\n        const response = await fetch(process.env.REACT_APP_BACKEND_URL+\"/users/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email_id: loginValues.email,\r\n            password: loginValues.password,\r\n          }),\r\n        });\r\n        const responseData = await response.json();\r\n        if (!responseData.ok && !responseData.user) {\r\n          toast.error(responseData.message);\r\n          return;\r\n        }\r\n        toast.success(responseData.message);\r\n        dispatch(\r\n          userInfoActions.setUserInfo({\r\n            user: responseData.user,\r\n            token: responseData.token,\r\n          })\r\n        );\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"userinfo\", JSON.stringify(responseData.user));\r\n          localStorage.setItem(\"token\", responseData.token);\r\n        }\r\n\r\n        const response_wsize = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/wishlist/size/${responseData.user.id}`,\r\n          { headers: { Authorization: \"Bearer \" + responseData.token } }\r\n        );\r\n        const responseData_wsize = await response_wsize.json();\r\n\r\n        if (\r\n          !responseData_wsize.ok &&\r\n          (responseData_wsize.wishlistSize === null ||\r\n            responseData_wsize.wishlistSize === undefined)\r\n        ) {\r\n          toast.error(responseData_wsize.message);\r\n          return;\r\n        }\r\n        dispatch(\r\n          cardbuttonsActions.setInitialValue({\r\n            type: \"wishlist\",\r\n            value: responseData_wsize.wishlistSize,\r\n          })\r\n        );\r\n        if (\r\n          responseData_wsize.wishlistSize !== null &&\r\n          responseData_wsize.wishlistSize !== undefined\r\n        ) {\r\n          localStorage.setItem(\"wishlistSize\", responseData_wsize.wishlistSize);\r\n        }\r\n\r\n        const response_csize = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/cart/size/${responseData.user.id}`,\r\n          { headers: { Authorization: \"Bearer \" + responseData.token } }\r\n        );\r\n        const responseData_csize = await response_csize.json();\r\n\r\n        if (\r\n          !responseData_csize.ok &&\r\n          (responseData_csize.cartSize === null ||\r\n            responseData_csize.cartSize === undefined)\r\n        ) {\r\n          toast.error(responseData_csize.message);\r\n          return;\r\n        }\r\n        dispatch(\r\n          cardbuttonsActions.setInitialValue({\r\n            type: \"cart\",\r\n            value: responseData_csize.cartSize,\r\n          })\r\n        );\r\n        if (\r\n          responseData_csize.cartSize !== null &&\r\n          responseData_csize.cartSize !== undefined\r\n        ) {\r\n          localStorage.setItem(\"cartSize\", responseData_csize.cartSize);\r\n        }\r\n\r\n        const wishlist = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/wishlist/user/${responseData.user.id}`,\r\n          { headers: { Authorization: \"Bearer \" + responseData.token } }\r\n        );\r\n        const responseData_wishlist = await wishlist.json();\r\n\r\n        if (!responseData_wishlist.ok && !responseData_wishlist.wishlist) {\r\n          toast.error(responseData_wishlist.message);\r\n          return;\r\n        }\r\n        dispatch(\r\n          wishlistCartActions.setInitialValue({\r\n            type: \"wishlist\",\r\n            value: responseData_wishlist.wishlist.movie_tv,\r\n          })\r\n        );\r\n        if (\r\n          responseData_wishlist.wishlist !== null &&\r\n          responseData_wishlist.wishlist !== undefined &&\r\n          responseData_wishlist.wishlist.movie_tv !== null &&\r\n          responseData_wishlist.wishlist.movie_tv !== undefined\r\n        ) {\r\n          localStorage.setItem(\r\n            \"wishlist\",\r\n            JSON.stringify(responseData_wishlist.wishlist.movie_tv)\r\n          );\r\n        }\r\n\r\n        const cart = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/cart/user/${responseData.user.id}`,\r\n          { headers: { Authorization: \"Bearer \" + responseData.token } }\r\n        );\r\n        const responseData_cart = await cart.json();\r\n\r\n        if (!responseData_cart.ok && !responseData_cart.cart) {\r\n          toast.error(responseData_cart.message);\r\n          return;\r\n        }\r\n        dispatch(\r\n          wishlistCartActions.setInitialValue({\r\n            type: \"cart\",\r\n            value: responseData_cart.cart.movie_tv,\r\n          })\r\n        );\r\n        if (\r\n          responseData_cart.cart !== null &&\r\n          responseData_cart.cart !== undefined\r\n        ) {\r\n          localStorage.setItem(\r\n            \"cart\",\r\n            JSON.stringify(responseData_cart.cart.movie_tv)\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      setLoginValues({\r\n        //for setting all the fields to initial state, i.e, resetting the form after successful submission.\r\n        email: \"\",\r\n        password: \"\",\r\n        pwd_show: true,\r\n      });\r\n\r\n      document.body.classList.remove(`${classes[\"body-style\"]}`); // this is done to remove the styles of body,root before redirecting.\r\n      document\r\n        .getElementById(\"root\")\r\n        .classList.remove(`${classes[\"container-root\"]}`);\r\n      navigate.push(\"/home\");\r\n    } else if (buttonName === \"signup\") {\r\n      if (signupValues.password !== signupValues.confirm_password) {\r\n        setPwdNotEqual(true);\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch(process.env.REACT_APP_BACKEND_URL+\"/users/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            user_name: signupValues.name,\r\n            email_id: signupValues.email,\r\n            password: signupValues.password,\r\n          }),\r\n        });\r\n        const responseData = await response.json();\r\n\r\n        if (!responseData.ok && !responseData.user) {\r\n          toast.error(responseData.message);\r\n          return;\r\n        }\r\n        toast.success(responseData.message);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      setSignupValues({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n        pwd_show: true,\r\n        conf_pwd_show: true,\r\n      });\r\n      // Flip the checkbox for signup\r\n      const flipCheckbox = document.getElementById(classes.flip);\r\n      if (flipCheckbox) {\r\n        var state = flipCheckbox.checked;\r\n        flipCheckbox.checked = !state; // Set the checkbox to checked\r\n      }\r\n    }\r\n    setDidEdit({\r\n      // setting the states for checking edited or not to initial values\r\n      login: {\r\n        email: false,\r\n      },\r\n      signup: {\r\n        name: false,\r\n        email: false,\r\n      },\r\n    });\r\n  }\r\n\r\n  function handleInputChange(section, identifier, value) {\r\n    //this function is called on every keystroke in input element(onChange event)\r\n    if (section === \"login\") {\r\n      setLoginValues((prevValues) => ({\r\n        ...prevValues,\r\n        [identifier]: value,\r\n      }));\r\n    } else if (section === \"signup\") {\r\n      setSignupValues((prevValues) => ({\r\n        ...prevValues,\r\n        [identifier]: value,\r\n      }));\r\n    }\r\n\r\n    setDidEdit((prevEdit) => ({\r\n      // this is done to remove the error message as soon as user starts typing again.\r\n      ...prevEdit,\r\n      [section]: { ...prevEdit[section], [identifier]: false },\r\n    }));\r\n  }\r\n\r\n  function handleInputBlur(section, identifier) {\r\n    //this function is called when input element loses focus.(onBlur event)\r\n    setDidEdit((prevEdit) => ({\r\n      // this is done to show the error message(if any) as soon as input element loses focus.\r\n      ...prevEdit,\r\n      [section]: { ...prevEdit[section], [identifier]: true },\r\n    }));\r\n  }\r\n\r\n  function handleShowPassword(section, identifier) {\r\n    //this function is called to show or hide the password\r\n    if (section === \"login\") {\r\n      setLoginValues((prevValues) => {\r\n        var showpwd = !prevValues.pwd_show; // this is done to reverse the previous state of pwd_show to toggle between true-false\r\n        return {\r\n          ...prevValues,\r\n          [identifier]: showpwd,\r\n        };\r\n      });\r\n    } else if (section === \"signup\") {\r\n      if (identifier === \"pwd_show\") {\r\n        setSignupValues((prevValues) => {\r\n          var showpwd = !prevValues.pwd_show;\r\n          return {\r\n            ...prevValues,\r\n            [identifier]: showpwd,\r\n          };\r\n        });\r\n      } else if (identifier === \"conf_pwd_show\") {\r\n        setSignupValues((prevValues) => {\r\n          var showconfpwd = !prevValues.conf_pwd_show;\r\n          return {\r\n            ...prevValues,\r\n            [identifier]: showconfpwd,\r\n          };\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  function resetForm(id) {\r\n    if (id === \"signup\") {\r\n      setSignupValues({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n        pwd_show: true,\r\n        conf_pwd_show: true,\r\n      });\r\n    } else if (id === \"login\") {\r\n      setLoginValues({\r\n        //for setting all the fields to initial state, i.e, resetting the form\r\n        email: \"\",\r\n        password: \"\",\r\n        pwd_show: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <input type=\"checkbox\" id={classes.flip} />\r\n      <div className={classes.cover}>\r\n        <div className={classes.front}>\r\n          <img src=\"logo.jpg\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n      <form name=\"login\" onSubmit={handleSubmit}>\r\n        <div className={classes[\"form-content\"]}>\r\n          <div className={classes[\"login-form\"]}>\r\n            <div className={classes.title}>Login</div>\r\n            <div className={classes[\"input-boxes\"]}>\r\n              <div className={classes[\"input-box\"]}>\r\n                <i className={`fas fa-envelope`}></i>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter you email\"\r\n                  onBlur={() => {\r\n                    handleInputBlur(\"login\", \"email\");\r\n                  }}\r\n                  onChange={(event) => {\r\n                    handleInputChange(\"login\", \"email\", event.target.value);\r\n                  }}\r\n                  value={loginValues.email}\r\n                />\r\n              </div>\r\n              {emailLoginIsInvalid && (\r\n                <div className={classes[\"control-error\"]}>\r\n                  <p>Please enter valid email address</p>\r\n                </div>\r\n              )}\r\n              <div className={classes[\"input-box\"]}>\r\n                <i className={`fas fa-lock`}></i>\r\n                <input\r\n                  type={loginValues.pwd_show ? \"password\" : \"text\"}\r\n                  placeholder=\"Enter you password\"\r\n                  onChange={(event) => {\r\n                    handleInputChange(\"login\", \"password\", event.target.value);\r\n                  }}\r\n                  value={loginValues.password}\r\n                />\r\n\r\n                <a\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    handleShowPassword(\"login\", \"pwd_show\");\r\n                  }}\r\n                >\r\n                  <span\r\n                    className={\r\n                      loginValues.pwd_show ? `fas fa-eye` : `fas fa-eye-slash`\r\n                    }\r\n                  />\r\n                </a>\r\n              </div>\r\n\r\n              <div className={`${classes.button} ${classes[\"input-box\"]}`}>\r\n                <input type=\"submit\" name=\"login\" value=\"Login\" />\r\n              </div>\r\n              <div className={`${classes.text} ${classes[\"login-text\"]}`}>\r\n                Don't have an account?{\" \"}\r\n                <label\r\n                  htmlFor={classes.flip}\r\n                  onClick={() => {\r\n                    resetForm(\"signup\");\r\n                  }}\r\n                >\r\n                  Signup now\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes[\"signup-form\"]}>\r\n            <div className={classes.title}>Signup</div>\r\n            <div className={classes[\"input-boxes\"]}>\r\n              <div className={classes[\"input-box\"]}>\r\n                <i className=\"fas fa-user\"></i>\r\n                {/* <input type=\"text\" placeholder=\"Enter you name\"  /> */}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter you name\"\r\n                  onBlur={() => {\r\n                    handleInputBlur(\"signup\", \"name\");\r\n                  }}\r\n                  onChange={(event) => {\r\n                    handleInputChange(\"signup\", \"name\", event.target.value);\r\n                  }}\r\n                  value={signupValues.name}\r\n                />\r\n              </div>\r\n              {nameSignupIsInvalid && (\r\n                <div className={classes[\"control-error\"]}>\r\n                  <p>Please enter valid name(text only)</p>\r\n                </div>\r\n              )}\r\n              <div className={classes[\"input-box\"]}>\r\n                <i className=\"fas fa-envelope\"></i>\r\n                {/* <input type=\"text\" placeholder=\"Enter you email\"  /> */}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter you email\"\r\n                  onBlur={() => {\r\n                    handleInputBlur(\"signup\", \"email\");\r\n                  }}\r\n                  onChange={(event) => {\r\n                    handleInputChange(\"signup\", \"email\", event.target.value);\r\n                  }}\r\n                  value={signupValues.email}\r\n                />\r\n              </div>\r\n              {emailSignupIsInvalid && (\r\n                <div className={classes[\"control-error\"]}>\r\n                  <p>Please enter valid email address</p>\r\n                </div>\r\n              )}\r\n              <div className={classes[\"input-box\"]}>\r\n                <i className=\"fas fa-lock\"></i>\r\n                {/* <input type=\"password\" placeholder=\"Enter you password\"  /> */}\r\n                <input\r\n                  type={signupValues.pwd_show ? \"password\" : \"text\"}\r\n                  placeholder=\"Enter you password\"\r\n                  onChange={(event) => {\r\n                    handleInputChange(\"signup\", \"password\", event.target.value);\r\n                  }}\r\n                  value={signupValues.password}\r\n                />\r\n                <a\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    handleShowPassword(\"signup\", \"pwd_show\");\r\n                  }}\r\n                >\r\n                  <span\r\n                    className={\r\n                      signupValues.pwd_show ? `fas fa-eye` : `fas fa-eye-slash`\r\n                    }\r\n                  />\r\n                </a>\r\n              </div>\r\n              <div className={classes[\"input-box\"]}>\r\n                <i className=\"fa fa-lock\"></i>\r\n                {/* <input type=\"password\" placeholder=\"Re-enter you password\"  /> */}\r\n                <input\r\n                  type={signupValues.conf_pwd_show ? \"password\" : \"text\"}\r\n                  placeholder=\"Re-enter you password\"\r\n                  onChange={(event) => {\r\n                    handleInputChange(\r\n                      \"signup\",\r\n                      \"confirm_password\",\r\n                      event.target.value\r\n                    );\r\n                  }}\r\n                  value={signupValues.confirm_password}\r\n                />\r\n                <a\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    handleShowPassword(\"signup\", \"conf_pwd_show\");\r\n                  }}\r\n                >\r\n                  <span\r\n                    className={\r\n                      signupValues.conf_pwd_show\r\n                        ? `fas fa-eye`\r\n                        : `fas fa-eye-slash`\r\n                    }\r\n                  />\r\n                </a>\r\n              </div>\r\n              {pwdNotEqual && (\r\n                <div className={classes[\"control-error\"]}>\r\n                  <p>Passwords must match</p>\r\n                </div>\r\n              )}\r\n\r\n              <div className={`${classes.button} ${classes[\"input-box\"]}`}>\r\n                <input type=\"submit\" name=\"signup\" value=\"Signup\" />\r\n              </div>\r\n              <div className={`${classes.text} ${classes[\"sign-up-text\"]}`}>\r\n                Already have an account?{\" \"}\r\n                <label\r\n                  htmlFor={classes.flip}\r\n                  onClick={() => {\r\n                    resetForm(\"login\");\r\n                  }}\r\n                >\r\n                  Login now\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","useEffect","document","body","classList","add","classes","getElementById","navigate","useHistory","dispatch","useDispatch","loginValues","setLoginValues","useState","email","password","pwd_show","signupValues","setSignupValues","name","confirm_password","conf_pwd_show","pwdNotEqual","setPwdNotEqual","didEdit","setDidEdit","login","signup","emailLoginIsInvalid","includes","nameSignupIsInvalid","match","emailSignupIsInvalid","handleInputChange","section","identifier","value","prevValues","prevEdit","handleInputBlur","handleShowPassword","showpwd","showconfpwd","resetForm","id","_jsxs","className","container","children","_jsx","type","flip","cover","front","src","alt","onSubmit","async","event","preventDefault","buttonName","nativeEvent","submitter","console","log","process","response","fetch","method","headers","JSON","stringify","email_id","responseData","json","ok","user","toast","error","message","success","userInfoActions","setUserInfo","token","localStorage","setItem","response_wsize","Authorization","responseData_wsize","wishlistSize","undefined","cardbuttonsActions","setInitialValue","response_csize","responseData_csize","cartSize","wishlist","responseData_wishlist","wishlistCartActions","movie_tv","cart","responseData_cart","err","remove","push","user_name","flipCheckbox","state","checked","title","placeholder","onBlur","onChange","target","href","onClick","button","text","htmlFor"],"sourceRoot":""}