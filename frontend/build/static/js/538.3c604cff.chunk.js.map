{"version":3,"file":"static/js/538.3c604cff.chunk.js","mappings":"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","sources":["webpack://frontend/./src/edit-profile/pages/EditProfile.module.css?9ece","edit-profile/pages/EditProfile.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editcontainer\":\"EditProfile_editcontainer__S-NxQ\",\"fieldContainer\":\"EditProfile_fieldContainer__QriCX\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { userInfoActions } from \"../../store\";\r\nimport styles from \"./EditProfile.module.css\";\r\n\r\nconst EditProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const [userInfo, setUserInfo] = useState(\r\n    JSON.parse(localStorage.getItem(\"userinfo\"))\r\n  );\r\n\r\n  const initialData = {\r\n    user_name: userInfo?.name || \"\",\r\n    email_id: userInfo?.email || \"\",\r\n    password: \"\",\r\n    retype_password: \"\",\r\n  };\r\n  const userId = userInfo.id;\r\n  useEffect(() => {\r\n    // Sync form data with updated userInfo\r\n    setFormData({\r\n      user_name: userInfo?.name || \"\",\r\n      email_id: userInfo?.email || \"\",\r\n      password: \"\",\r\n      retype_password: \"\",\r\n    });\r\n  }, [userInfo]);\r\n\r\n  // Form state\r\n  const [formData, setFormData] = useState(initialData);\r\n  const [isUserNameEnabled, setIsUserNameEnabled] = useState(false);\r\n  const [isEmailEnabled, setIsEmailEnabled] = useState(false);\r\n  const [isPasswordEnabled, setIsPasswordEnabled] = useState(false);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const submittedData = {};\r\n    if (isUserNameEnabled) {\r\n      if (\r\n        formData.user_name !== null &&\r\n        formData.user_name !== undefined &&\r\n        formData.user_name.trim() !== \"\"\r\n      )\r\n        submittedData.user_name = formData.user_name.trim();\r\n      else submittedData.user_name = undefined;\r\n    } else submittedData.user_name = undefined;\r\n\r\n    if (isEmailEnabled) {\r\n      if (\r\n        formData.email_id !== null &&\r\n        formData.email_id !== undefined &&\r\n        formData.email_id.trim() !== \"\"\r\n      )\r\n        submittedData.email_id = formData.email_id.trim();\r\n      else submittedData.email_id = undefined;\r\n    } else submittedData.email_id = undefined;\r\n\r\n    if (isPasswordEnabled) {\r\n      if (\r\n        formData.password !== null &&\r\n        formData.password !== undefined &&\r\n        formData.password.trim() !== \"\"\r\n      )\r\n        submittedData.password = formData.password.trim();\r\n      else submittedData.password = undefined;\r\n\r\n      if (\r\n        formData.retype_password !== null &&\r\n        formData.retype_password !== undefined &&\r\n        formData.retype_password.trim() !== \"\"\r\n      ) {\r\n        if (formData.retype_password !== formData.password) {\r\n          toast.error(\"Passwords don't match. Please re-type!\");\r\n          return;\r\n        }\r\n      } else {\r\n        toast.error(\"Please re-type new password!\");\r\n        return;\r\n      }\r\n    } else submittedData.password = undefined;\r\n\r\n    //after submitting, fetch('DB') to patch the data. Update the localStorage and redux toolkit.\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/updateprofile/${userId}`,\r\n        {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            user_name: submittedData.user_name,\r\n            email_id: submittedData.email_id,\r\n            password: submittedData.password,\r\n          }),\r\n        }\r\n      );\r\n      const responseData = await response.json();\r\n\r\n      if (!responseData.ok && !responseData.user) {\r\n        toast.error(responseData.message);\r\n        return;\r\n      }\r\n      toast.success(responseData.message);\r\n      dispatch(\r\n        userInfoActions.setUserInfo({\r\n          user: responseData.user,\r\n        })\r\n      );\r\n      if (responseData.user) {\r\n        localStorage.setItem(\"userinfo\", JSON.stringify(responseData.user));\r\n      }\r\n      setUserInfo(responseData.user);\r\n      setFormData({\r\n        user_name: responseData.user.name || \"\",\r\n        email_id: responseData.user.email || \"\",\r\n        password: \"\",\r\n        retype_password: \"\",\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    // Reset to initial state\r\n    setIsUserNameEnabled(false);\r\n    setIsEmailEnabled(false);\r\n    setIsPasswordEnabled(false);\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.editcontainer}>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* User Name Field */}\r\n        <div className={styles.fieldContainer}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isUserNameEnabled}\r\n            onChange={(e) => setIsUserNameEnabled(e.target.checked)}\r\n          />\r\n          <label\r\n            className={isUserNameEnabled ? styles.enabled : styles.disabled}\r\n          >\r\n            User Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"user_name\"\r\n            value={formData.user_name}\r\n            disabled={!isUserNameEnabled}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        {/* Email Field */}\r\n        <div className={styles.fieldContainer}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isEmailEnabled}\r\n            onChange={(e) => setIsEmailEnabled(e.target.checked)}\r\n          />\r\n          <label className={isEmailEnabled ? styles.enabled : styles.disabled}>\r\n            Email ID:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email_id\"\r\n            value={formData.email_id}\r\n            disabled={!isEmailEnabled}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.fieldContainer}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isPasswordEnabled}\r\n            onChange={(e) => setIsPasswordEnabled(e.target.checked)}\r\n          />\r\n          <label\r\n            className={isPasswordEnabled ? styles.enabled : styles.disabled}\r\n          >\r\n            Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            disabled={!isPasswordEnabled}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.fieldContainer}>\r\n          <label\r\n            className={isPasswordEnabled ? styles.enabled : styles.disabled}\r\n          >\r\n            Re-type Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"retype_password\"\r\n            value={formData.retype_password}\r\n            disabled={!isPasswordEnabled}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"names":["EditProfile","dispatch","useDispatch","userInfo","setUserInfo","useState","JSON","parse","localStorage","getItem","initialData","user_name","name","email_id","email","password","retype_password","userId","id","useEffect","setFormData","formData","isUserNameEnabled","setIsUserNameEnabled","isEmailEnabled","setIsEmailEnabled","isPasswordEnabled","setIsPasswordEnabled","handleChange","e","value","target","_jsx","className","styles","editcontainer","children","_jsxs","onSubmit","async","preventDefault","submittedData","undefined","trim","toast","error","response","fetch","method","headers","body","stringify","responseData","json","ok","user","message","success","userInfoActions","setItem","err","console","log","fieldContainer","type","checked","onChange","enabled","disabled"],"sourceRoot":""}