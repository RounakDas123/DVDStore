{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasru\\\\Documents\\\\DVDStore_dev\\\\frontend\\\\src\\\\buttons\\\\Wishlistnavbutton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TfiViewListAlt } from \"react-icons/tfi\";\nimport classes from '../navbar/pages/MainNavigation.module.css';\nimport { cardbuttonsActions } from '../store';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Wishlistnavbutton() {\n  _s();\n  const [toggleList, setToggleList] = useState(false);\n  const openList = () => {\n    setToggleList(!toggleList);\n  };\n  const dispatch = useDispatch();\n\n  /*  dispatch(cardbuttonsActions.setInitialValue({\r\n                    type: \"wishlist\",\r\n                    value: Number(localStorage.getItem('wishlistSize'))\r\n    }));\r\n  const changeBadgeValue = useSelector(state => state.cardbuttons.wishlistCounter);*/\n\n  const changeBadgeValue = useSelector(state => state.cardbuttons.wishlistCounter);\n\n  // Fetch and dispatch the wishlist size only when localStorage changes\n  useEffect(() => {\n    const wishlistSize = Number(localStorage.getItem('wishlistSize')) || 0;\n    dispatch(cardbuttonsActions.setInitialValue({\n      type: \"wishlist\",\n      value: wishlistSize\n    }));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TfiViewListAlt, {\n      className: `${!toggleList ? classes.wishlistnav : classes[\"wishlistnav-active\"]}`,\n      onClick: openList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes[\"icon-buttonbadge\"],\n      children: changeBadgeValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Wishlistnavbutton, \"FxBi9uGhGYcYdsN59Lah1b0HA5I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Wishlistnavbutton;\n;\nexport default Wishlistnavbutton;\nvar _c;\n$RefreshReg$(_c, \"Wishlistnavbutton\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","TfiViewListAlt","classes","cardbuttonsActions","jsxDEV","_jsxDEV","Fragment","_Fragment","Wishlistnavbutton","_s","toggleList","setToggleList","openList","dispatch","changeBadgeValue","state","cardbuttons","wishlistCounter","wishlistSize","Number","localStorage","getItem","setInitialValue","type","value","children","className","wishlistnav","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dasru/Documents/DVDStore_dev/frontend/src/buttons/Wishlistnavbutton.js"],"sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { TfiViewListAlt } from \"react-icons/tfi\";\r\n\r\nimport classes from '../navbar/pages/MainNavigation.module.css';\r\nimport { cardbuttonsActions } from '../store';\r\n\r\nfunction Wishlistnavbutton() {\r\n  const  [toggleList, setToggleList] = useState(false);\r\n  const openList = () =>{\r\n    setToggleList(!toggleList);\r\n  };  \r\n  const dispatch = useDispatch();\r\n\r\n  /*  dispatch(cardbuttonsActions.setInitialValue({\r\n                    type: \"wishlist\",\r\n                    value: Number(localStorage.getItem('wishlistSize'))\r\n    }));\r\n  const changeBadgeValue = useSelector(state => state.cardbuttons.wishlistCounter);*/\r\n\r\n  const changeBadgeValue = useSelector(state => state.cardbuttons.wishlistCounter);\r\n\r\n  // Fetch and dispatch the wishlist size only when localStorage changes\r\n  useEffect(() => {\r\n    const wishlistSize = Number(localStorage.getItem('wishlistSize')) || 0;\r\n    dispatch(cardbuttonsActions.setInitialValue({\r\n      type: \"wishlist\",\r\n      value: wishlistSize\r\n    }));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n    <TfiViewListAlt className={`${!toggleList ? classes.wishlistnav : classes[\"wishlistnav-active\"]}`} onClick={openList} />\r\n    <span className={classes[\"icon-buttonbadge\"]}>{changeBadgeValue}</span>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Wishlistnavbutton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,OAAOC,OAAO,MAAM,2CAA2C;AAC/D,SAASC,kBAAkB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAO,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACpD,MAAMe,QAAQ,GAAGA,CAAA,KAAK;IACpBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EACD,MAAMG,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;AACF;AACA;AACA;AACA;;EAEE,MAAMc,gBAAgB,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,WAAW,CAACC,eAAe,CAAC;;EAEhF;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,YAAY,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;IACtER,QAAQ,CAACV,kBAAkB,CAACmB,eAAe,CAAC;MAC1CC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAEN;IACT,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACER,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACApB,OAAA,CAACJ,cAAc;MAACyB,SAAS,EAAE,GAAG,CAAChB,UAAU,GAAGR,OAAO,CAACyB,WAAW,GAAGzB,OAAO,CAAC,oBAAoB,CAAC,EAAG;MAAC0B,OAAO,EAAEhB;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxH3B,OAAA;MAAMqB,SAAS,EAAExB,OAAO,CAAC,kBAAkB,CAAE;MAAAuB,QAAA,EAAEX;IAAgB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eACrE,CAAC;AAEP;AAACvB,EAAA,CA9BQD,iBAAiB;EAAA,QAKPR,WAAW,EAQHD,WAAW;AAAA;AAAAkC,EAAA,GAb7BzB,iBAAiB;AA8BzB;AAED,eAAeA,iBAAiB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}