{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasru\\\\Documents\\\\DVDStore_dev\\\\frontend\\\\src\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n// import { isAuthenticated } from './utils/authUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token');\n  if (!token) return false;\n  try {\n    const decodedToken = jwtDecode(token);\n    const currentTime = Date.now() / 1000; // Convert milliseconds to seconds\n    return decodedToken.exp > currentTime; // Check if the token is expired\n  } catch (error) {\n    return false;\n  }\n};\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, {\n  ...rest,\n  render: props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 5\n}, this);\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","jwtDecode","jsxDEV","_jsxDEV","isAuthenticated","token","localStorage","getItem","decodedToken","currentTime","Date","now","exp","error","PrivateRoute","component","Component","rest","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/dasru/Documents/DVDStore_dev/frontend/src/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {jwtDecode} from 'jwt-decode';\r\n// import { isAuthenticated } from './utils/authUtils';\r\n\r\nconst isAuthenticated = () => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) return false;\r\n\r\n  try {\r\n    const decodedToken = jwtDecode(token);\r\n    const currentTime = Date.now() / 1000; // Convert milliseconds to seconds\r\n    return decodedToken.exp > currentTime; // Check if the token is expired\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated() ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n  \r\n  export default PrivateRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAAQC,SAAS,QAAO,YAAY;AACpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK;EAExB,IAAI;IACF,MAAMG,YAAY,GAAGP,SAAS,CAACI,KAAK,CAAC;IACrC,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvC,OAAOH,YAAY,CAACI,GAAG,GAAGH,WAAW,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,kBACnDd,OAAA,CAACJ,KAAK;EAAA,GACAkB,IAAI;EACRC,MAAM,EAAGC,KAAK,IACZf,eAAe,CAAC,CAAC,gBACfD,OAAA,CAACa,SAAS;IAAA,GAAKG;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,gBAExBpB,OAAA,CAACH,QAAQ;IAACwB,EAAE,EAAC;EAAG;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAErB;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACF,CACF;AAACE,EAAA,GAXEX,YAAY;AAahB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}