{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\n// const initialState = {showSearchOverlay : false};  \n\nconst searchOverlaySlice = createSlice({\n  name: 'searchoverlay',\n  initialState: {\n    showSearchOverlay: false\n  },\n  reducers: {\n    showOverlay(state, action) {\n      state.showSearchOverlay = action.payload;\n    }\n  }\n});\nconst movieDetailsSlice = createSlice({\n  name: 'movieDetails',\n  initialState: {\n    showMovieDetails: false\n  },\n  reducers: {\n    openModal(state) {\n      state.showMovieDetails = true;\n    },\n    closeModal(state) {\n      state.showMovieDetails = false;\n    }\n  }\n});\nconst searchDetailsSlice = createSlice({\n  name: 'searchDetails',\n  initialState: {\n    showSearchDetails: true\n  },\n  reducers: {\n    showSearchCarousel(state) {\n      state.showSearchDetails = false;\n    },\n    hideSearchCarousel(state) {\n      state.showSearchDetails = true;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState ,action) => {\n\n//     if(action.type==='showOverlay')\n//     {\n//         return {\n//             showSearchOverlay : action.visibility,\n//         };\n//     }\n\n//     return state;\n// };\n\nconst store = configureStore({\n  reducer: {\n    searchOverlay: searchOverlaySlice.reducer,\n    movieDetails: movieDetailsSlice.reducer,\n    searchDetails: searchDetailsSlice.reducer\n  }\n});\nexport const searchOverlayActions = searchOverlaySlice.actions;\nexport const movieDetailsActions = movieDetailsSlice.actions;\nexport const searchDetailsActions = searchDetailsSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","searchOverlaySlice","name","initialState","showSearchOverlay","reducers","showOverlay","state","action","payload","movieDetailsSlice","showMovieDetails","openModal","closeModal","searchDetailsSlice","showSearchDetails","showSearchCarousel","hideSearchCarousel","store","reducer","searchOverlay","movieDetails","searchDetails","searchOverlayActions","actions","movieDetailsActions","searchDetailsActions"],"sources":["C:/Users/dasru/Documents/DVDStore_dev/frontend/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\n// const initialState = {showSearchOverlay : false};  \r\n\r\nconst searchOverlaySlice = createSlice({\r\n    name:'searchoverlay',\r\n    initialState : {showSearchOverlay : false},\r\n    reducers: {\r\n        showOverlay(state,action) {\r\n            state.showSearchOverlay = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nconst movieDetailsSlice = createSlice({\r\n    name: 'movieDetails',\r\n    initialState : {showMovieDetails : false},\r\n    reducers : {\r\n        openModal(state){\r\n            state.showMovieDetails = true;\r\n        },\r\n        closeModal(state){\r\n            state.showMovieDetails = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst searchDetailsSlice = createSlice({\r\n    name: 'searchDetails',\r\n    initialState : {showSearchDetails : true},\r\n    reducers : {\r\n        showSearchCarousel(state){\r\n            state.showSearchDetails = false;\r\n        },\r\n        hideSearchCarousel(state){\r\n            state.showSearchDetails = true;\r\n        }\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState ,action) => {\r\n\r\n//     if(action.type==='showOverlay')\r\n//     {\r\n//         return {\r\n//             showSearchOverlay : action.visibility,\r\n//         };\r\n//     }\r\n    \r\n\r\n//     return state;\r\n// };\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {searchOverlay : searchOverlaySlice.reducer,\r\n              movieDetails  : movieDetailsSlice.reducer,\r\n              searchDetails : searchDetailsSlice.reducer},\r\n});\r\n\r\nexport const searchOverlayActions = searchOverlaySlice.actions;\r\nexport const movieDetailsActions = movieDetailsSlice.actions;\r\nexport const searchDetailsActions = searchDetailsSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;;AAE9D;;AAEA,MAAMC,kBAAkB,GAAGF,WAAW,CAAC;EACnCG,IAAI,EAAC,eAAe;EACpBC,YAAY,EAAG;IAACC,iBAAiB,EAAG;EAAK,CAAC;EAC1CC,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAACC,MAAM,EAAE;MACtBD,KAAK,CAACH,iBAAiB,GAAGI,MAAM,CAACC,OAAO;IAC5C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMC,iBAAiB,GAAGX,WAAW,CAAC;EAClCG,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAG;IAACQ,gBAAgB,EAAG;EAAK,CAAC;EACzCN,QAAQ,EAAG;IACPO,SAASA,CAACL,KAAK,EAAC;MACZA,KAAK,CAACI,gBAAgB,GAAG,IAAI;IACjC,CAAC;IACDE,UAAUA,CAACN,KAAK,EAAC;MACbA,KAAK,CAACI,gBAAgB,GAAG,KAAK;IAClC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMG,kBAAkB,GAAGf,WAAW,CAAC;EACnCG,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAG;IAACY,iBAAiB,EAAG;EAAI,CAAC;EACzCV,QAAQ,EAAG;IACPW,kBAAkBA,CAACT,KAAK,EAAC;MACrBA,KAAK,CAACQ,iBAAiB,GAAG,KAAK;IACnC,CAAC;IACDE,kBAAkBA,CAACV,KAAK,EAAC;MACrBA,KAAK,CAACQ,iBAAiB,GAAG,IAAI;IAClC;EACJ;AACJ,CAAC,CAAC;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA,MAAMG,KAAK,GAAGlB,cAAc,CAAC;EACzBmB,OAAO,EAAE;IAACC,aAAa,EAAGnB,kBAAkB,CAACkB,OAAO;IAC1CE,YAAY,EAAIX,iBAAiB,CAACS,OAAO;IACzCG,aAAa,EAAGR,kBAAkB,CAACK;EAAO;AACxD,CAAC,CAAC;AAEF,OAAO,MAAMI,oBAAoB,GAAGtB,kBAAkB,CAACuB,OAAO;AAC9D,OAAO,MAAMC,mBAAmB,GAAGf,iBAAiB,CAACc,OAAO;AAC5D,OAAO,MAAME,oBAAoB,GAAGZ,kBAAkB,CAACU,OAAO;AAE9D,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}