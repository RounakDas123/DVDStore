{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst searchOverlaySlice = createSlice({\n  name: \"searchoverlay\",\n  initialState: {\n    showSearchOverlay: false\n  },\n  reducers: {\n    showOverlay(state, action) {\n      state.showSearchOverlay = action.payload;\n    }\n  }\n});\nconst searchDetailsSlice = createSlice({\n  name: \"searchDetails\",\n  initialState: {\n    showSearchDetails: true,\n    searchText: \"\"\n  },\n  reducers: {\n    showSearchCarousel(state) {\n      state.showSearchDetails = false;\n    },\n    hideSearchCarousel(state) {\n      state.showSearchDetails = true;\n    },\n    fillSearchText(state, action) {\n      state.searchText = action.payload;\n    }\n  }\n});\nconst cardButtonsSlice = createSlice({\n  name: \"cardButtons\",\n  initialState: {\n    wishlistCounter: 0,\n    cartCounter: 0\n  },\n  reducers: {\n    setInitialValue(state, action) {\n      if (action.payload.type === \"wishlist\") {\n        state.wishlistCounter = action.payload.value;\n      } else if (action.payload.type === \"cart\") {\n        state.cartCounter = action.payload.value;\n      }\n    }\n  }\n});\nconst userInfoSlice = createSlice({\n  name: \"userinfo\",\n  initialState: {\n    user: {},\n    token: null\n  },\n  reducers: {\n    setUserInfo(state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }\n  }\n});\nconst wishlistCartSlice = createSlice({\n  name: \"wishlistcart\",\n  initialState: {\n    wishlist: [],\n    cart: []\n  },\n  reducers: {\n    setInitialValue(state, action) {\n      if (action.payload.type === \"wishlist\") {\n        state.wishlist = action.payload.value;\n      } else if (action.payload.type === \"cart\") {\n        state.cart = action.payload.value;\n      }\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    searchOverlay: searchOverlaySlice.reducer,\n    searchDetails: searchDetailsSlice.reducer,\n    cardbuttons: cardButtonsSlice.reducer,\n    userInfo: userInfoSlice.reducer,\n    wishlistCart: wishlistCartSlice.reducer\n  }\n});\nexport const searchOverlayActions = searchOverlaySlice.actions;\nexport const searchDetailsActions = searchDetailsSlice.actions;\nexport const cardbuttonsActions = cardButtonsSlice.actions;\nexport const userInfoActions = userInfoSlice.actions;\nexport const wishlistCartActions = wishlistCartSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","searchOverlaySlice","name","initialState","showSearchOverlay","reducers","showOverlay","state","action","payload","searchDetailsSlice","showSearchDetails","searchText","showSearchCarousel","hideSearchCarousel","fillSearchText","cardButtonsSlice","wishlistCounter","cartCounter","setInitialValue","type","value","userInfoSlice","user","token","setUserInfo","wishlistCartSlice","wishlist","cart","store","reducer","searchOverlay","searchDetails","cardbuttons","userInfo","wishlistCart","searchOverlayActions","actions","searchDetailsActions","cardbuttonsActions","userInfoActions","wishlistCartActions"],"sources":["C:/Users/dasru/Documents/DVDStore_dev/frontend/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst searchOverlaySlice = createSlice({\r\n  name: \"searchoverlay\",\r\n  initialState: { showSearchOverlay: false },\r\n  reducers: {\r\n    showOverlay(state, action) {\r\n      state.showSearchOverlay = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst searchDetailsSlice = createSlice({\r\n  name: \"searchDetails\",\r\n  initialState: { showSearchDetails: true, searchText: \"\" },\r\n  reducers: {\r\n    showSearchCarousel(state) {\r\n      state.showSearchDetails = false;\r\n    },\r\n    hideSearchCarousel(state) {\r\n      state.showSearchDetails = true;\r\n    },\r\n    fillSearchText(state, action) {\r\n      state.searchText = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst cardButtonsSlice = createSlice({\r\n  name: \"cardButtons\",\r\n  initialState: { wishlistCounter: 0, cartCounter: 0 },\r\n  reducers: {\r\n    setInitialValue(state, action) {\r\n      if (action.payload.type === \"wishlist\") {\r\n        state.wishlistCounter = action.payload.value;\r\n      } else if (action.payload.type === \"cart\") {\r\n        state.cartCounter = action.payload.value;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst userInfoSlice = createSlice({\r\n  name: \"userinfo\",\r\n  initialState: { user: {}, token: null },\r\n  reducers: {\r\n    setUserInfo(state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n    },\r\n  },\r\n});\r\n\r\nconst wishlistCartSlice = createSlice({\r\n  name: \"wishlistcart\",\r\n  initialState: { wishlist: [], cart: [] },\r\n  reducers: {\r\n    setInitialValue(state, action) {\r\n      if (action.payload.type === \"wishlist\") {\r\n        state.wishlist = action.payload.value;\r\n      } else if (action.payload.type === \"cart\") {\r\n        state.cart = action.payload.value;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    searchOverlay: searchOverlaySlice.reducer,\r\n\r\n    searchDetails: searchDetailsSlice.reducer,\r\n    cardbuttons: cardButtonsSlice.reducer,\r\n    userInfo: userInfoSlice.reducer,\r\n    wishlistCart: wishlistCartSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const searchOverlayActions = searchOverlaySlice.actions;\r\nexport const searchDetailsActions = searchDetailsSlice.actions;\r\nexport const cardbuttonsActions = cardButtonsSlice.actions;\r\nexport const userInfoActions = userInfoSlice.actions;\r\nexport const wishlistCartActions = wishlistCartSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,kBAAkB,GAAGD,WAAW,CAAC;EACrCE,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE;IAAEC,iBAAiB,EAAE;EAAM,CAAC;EAC1CC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACH,iBAAiB,GAAGI,MAAM,CAACC,OAAO;IAC1C;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAGV,WAAW,CAAC;EACrCE,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE;IAAEQ,iBAAiB,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAG,CAAC;EACzDP,QAAQ,EAAE;IACRQ,kBAAkBA,CAACN,KAAK,EAAE;MACxBA,KAAK,CAACI,iBAAiB,GAAG,KAAK;IACjC,CAAC;IACDG,kBAAkBA,CAACP,KAAK,EAAE;MACxBA,KAAK,CAACI,iBAAiB,GAAG,IAAI;IAChC,CAAC;IACDI,cAAcA,CAACR,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACK,UAAU,GAAGJ,MAAM,CAACC,OAAO;IACnC;EACF;AACF,CAAC,CAAC;AAEF,MAAMO,gBAAgB,GAAGhB,WAAW,CAAC;EACnCE,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IAAEc,eAAe,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAE,CAAC;EACpDb,QAAQ,EAAE;IACRc,eAAeA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAC7B,IAAIA,MAAM,CAACC,OAAO,CAACW,IAAI,KAAK,UAAU,EAAE;QACtCb,KAAK,CAACU,eAAe,GAAGT,MAAM,CAACC,OAAO,CAACY,KAAK;MAC9C,CAAC,MAAM,IAAIb,MAAM,CAACC,OAAO,CAACW,IAAI,KAAK,MAAM,EAAE;QACzCb,KAAK,CAACW,WAAW,GAAGV,MAAM,CAACC,OAAO,CAACY,KAAK;MAC1C;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGtB,WAAW,CAAC;EAChCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IAAEoB,IAAI,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAK,CAAC;EACvCnB,QAAQ,EAAE;IACRoB,WAAWA,CAAClB,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACgB,IAAI,GAAGf,MAAM,CAACC,OAAO,CAACc,IAAI;MAChChB,KAAK,CAACiB,KAAK,GAAGhB,MAAM,CAACC,OAAO,CAACe,KAAK;IACpC;EACF;AACF,CAAC,CAAC;AAEF,MAAME,iBAAiB,GAAG1B,WAAW,CAAC;EACpCE,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IAAEwB,QAAQ,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EACxCvB,QAAQ,EAAE;IACRc,eAAeA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAC7B,IAAIA,MAAM,CAACC,OAAO,CAACW,IAAI,KAAK,UAAU,EAAE;QACtCb,KAAK,CAACoB,QAAQ,GAAGnB,MAAM,CAACC,OAAO,CAACY,KAAK;MACvC,CAAC,MAAM,IAAIb,MAAM,CAACC,OAAO,CAACW,IAAI,KAAK,MAAM,EAAE;QACzCb,KAAK,CAACqB,IAAI,GAAGpB,MAAM,CAACC,OAAO,CAACY,KAAK;MACnC;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMQ,KAAK,GAAG9B,cAAc,CAAC;EAC3B+B,OAAO,EAAE;IACPC,aAAa,EAAE9B,kBAAkB,CAAC6B,OAAO;IAEzCE,aAAa,EAAEtB,kBAAkB,CAACoB,OAAO;IACzCG,WAAW,EAAEjB,gBAAgB,CAACc,OAAO;IACrCI,QAAQ,EAAEZ,aAAa,CAACQ,OAAO;IAC/BK,YAAY,EAAET,iBAAiB,CAACI;EAClC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,oBAAoB,GAAGnC,kBAAkB,CAACoC,OAAO;AAC9D,OAAO,MAAMC,oBAAoB,GAAG5B,kBAAkB,CAAC2B,OAAO;AAC9D,OAAO,MAAME,kBAAkB,GAAGvB,gBAAgB,CAACqB,OAAO;AAC1D,OAAO,MAAMG,eAAe,GAAGlB,aAAa,CAACe,OAAO;AACpD,OAAO,MAAMI,mBAAmB,GAAGf,iBAAiB,CAACW,OAAO;AAE5D,eAAeR,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}