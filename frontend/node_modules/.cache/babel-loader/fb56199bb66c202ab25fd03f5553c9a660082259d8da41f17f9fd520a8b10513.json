{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasru\\\\Documents\\\\DVDStore_dev\\\\frontend\\\\src\\\\buttons\\\\Cartnavbutton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsCart4 } from \"react-icons/bs\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport classes from '../navbar/pages/MainNavigation.module.css';\nimport { cardbuttonsActions } from '../store';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Cartnavbutton() {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const isActive = location.pathname === \"/cart\";\n  const changeBadgeValue = useSelector(state => state.cardbuttons.cartCounter);\n\n  // Fetch and dispatch the cart size only when localStorage changes\n  useEffect(() => {\n    const cartSize = Number(localStorage.getItem('cartSize')) || 0;\n    dispatch(cardbuttonsActions.setInitialValue({\n      type: \"cart\",\n      value: cartSize\n    }));\n  }, [dispatch]);\n  const openCart = () => {\n    history.push(\"/cart\"); // Always navigate to /cart\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BsCart4, {\n      className: `${isActive ? classes[\"cartnav-active\"] : classes.cartnav}`,\n      onClick: openCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes[\"icon-buttonbadge\"],\n      children: changeBadgeValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Cartnavbutton, \"EBijHYu6TA+CVYTDVh/Fx25pSfQ=\", false, function () {\n  return [useHistory, useLocation, useDispatch, useSelector];\n});\n_c = Cartnavbutton;\n;\nexport default Cartnavbutton;\nvar _c;\n$RefreshReg$(_c, \"Cartnavbutton\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","BsCart4","useHistory","useLocation","classes","cardbuttonsActions","jsxDEV","_jsxDEV","Fragment","_Fragment","Cartnavbutton","_s","history","location","dispatch","isActive","pathname","changeBadgeValue","state","cardbuttons","cartCounter","cartSize","Number","localStorage","getItem","setInitialValue","type","value","openCart","push","children","className","cartnav","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dasru/Documents/DVDStore_dev/frontend/src/buttons/Cartnavbutton.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { BsCart4 } from \"react-icons/bs\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport classes from '../navbar/pages/MainNavigation.module.css';\r\nimport { cardbuttonsActions } from '../store';\r\n\r\nfunction Cartnavbutton() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const isActive = location.pathname === \"/cart\";\r\n  \r\n    const changeBadgeValue = useSelector(state => state.cardbuttons.cartCounter);\r\n  \r\n    // Fetch and dispatch the cart size only when localStorage changes\r\n    useEffect(() => {\r\n      const cartSize = Number(localStorage.getItem('cartSize')) || 0;\r\n      dispatch(cardbuttonsActions.setInitialValue({\r\n        type: \"cart\",\r\n        value: cartSize\r\n      }));\r\n    }, [dispatch]);\r\n\r\n    const openCart = () => {\r\n      history.push(\"/cart\"); // Always navigate to /cart\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <BsCart4\r\n        className={`${isActive ? classes[\"cartnav-active\"] : classes.cartnav}`}\r\n        onClick={openCart}\r\n      />\r\n      <span className={classes[\"icon-buttonbadge\"]}>{changeBadgeValue}</span>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Cartnavbutton;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAE1D,OAAOC,OAAO,MAAM,2CAA2C;AAC/D,SAASC,kBAAkB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGV,UAAU,CAAC,CAAC;EAC5B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGF,QAAQ,CAACG,QAAQ,KAAK,OAAO;EAE5C,MAAMC,gBAAgB,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,WAAW,CAACC,WAAW,CAAC;;EAE5E;EACAtB,SAAS,CAAC,MAAM;IACd,MAAMuB,QAAQ,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;IAC9DV,QAAQ,CAACT,kBAAkB,CAACoB,eAAe,CAAC;MAC1CC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAEN;IACT,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMc,QAAQ,GAAGA,CAAA,KAAM;IACrBhB,OAAO,CAACiB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC;EAEH,oBACEtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACAvB,OAAA,CAACN,OAAO;MACJ8B,SAAS,EAAE,GAAGhB,QAAQ,GAAGX,OAAO,CAAC,gBAAgB,CAAC,GAAGA,OAAO,CAAC4B,OAAO,EAAG;MACvEC,OAAO,EAAEL;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACF9B,OAAA;MAAMwB,SAAS,EAAE3B,OAAO,CAAC,kBAAkB,CAAE;MAAA0B,QAAA,EAAEb;IAAgB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eACvE,CAAC;AAEP;AAAC1B,EAAA,CA9BQD,aAAa;EAAA,QACJR,UAAU,EACTC,WAAW,EACXH,WAAW,EAGDD,WAAW;AAAA;AAAAuC,EAAA,GAN/B5B,aAAa;AA8BrB;AAED,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}