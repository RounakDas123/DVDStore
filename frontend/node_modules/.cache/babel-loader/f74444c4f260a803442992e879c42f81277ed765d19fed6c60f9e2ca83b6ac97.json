{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasru\\\\Documents\\\\DVDStore_dev\\\\frontend\\\\src\\\\home\\\\pages\\\\Carousel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport classes from \"./Carousel.module.css\";\nimport DetailsModal from \"./DetailsModal\";\nimport Overview from \"./Overview\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Carousel({\n  movieList,\n  type\n}) {\n  _s();\n  const [selectedMovieId, setSelectedMovieId] = useState(null);\n  const [selectedModalType, setSelectedModalType] = useState(null);\n  const dialog = useRef();\n  const settings = {\n    dots: false,\n    lazyLoad: true,\n    infinite: movieList.length > 5,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 1\n  };\n  const getColor = vote => {\n    if (vote >= 8) return \"green\";else if (vote >= 5 && vote < 8) return \"orange\";else return \"red\";\n  };\n  const openModal = (event, movieId, modalType) => {\n    event.preventDefault();\n    setSelectedMovieId(movieId);\n    setSelectedModalType(modalType);\n    dialog.current.open();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DetailsModal, {\n      ref: dialog,\n      movieid: selectedMovieId,\n      type: type,\n      modalType: selectedModalType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"container-carousel\"],\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        ...settings,\n        children: movieList.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.movie,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n            alt: \"\",\n            title: type === \"movie\" ? movie.title : movie.name,\n            className: classes.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"movie-info\"],\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: classes.title,\n              children: type === \"movie\" ? movie.title : movie.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes[`${getColor(movie.vote_average)}`],\n              children: movie.vote_average.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Overview, {\n            movie: movie,\n            type: type,\n            onClick: e => openModal(e, movie.id, \"carouselModal\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Carousel, \"J4uDhhmdXL1vfk2a0uEEjyHiaew=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useRef","useState","Slider","classes","DetailsModal","Overview","jsxDEV","_jsxDEV","Fragment","_Fragment","Carousel","movieList","type","_s","selectedMovieId","setSelectedMovieId","selectedModalType","setSelectedModalType","dialog","settings","dots","lazyLoad","infinite","length","speed","slidesToShow","slidesToScroll","getColor","vote","openModal","event","movieId","modalType","preventDefault","current","open","children","ref","movieid","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","src","poster_path","alt","title","name","image","vote_average","toFixed","onClick","e","id","_c","$RefreshReg$"],"sources":["C:/Users/dasru/Documents/DVDStore_dev/frontend/src/home/pages/Carousel.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\n\r\nimport classes from \"./Carousel.module.css\";\r\nimport DetailsModal from \"./DetailsModal\";\r\nimport Overview from \"./Overview\";\r\n\r\nfunction Carousel({ movieList, type }) {\r\n  const [selectedMovieId, setSelectedMovieId] = useState(null);\r\n  const [selectedModalType, setSelectedModalType] = useState(null);\r\n\r\n  const dialog = useRef();\r\n\r\n  const settings = {\r\n    dots: false,\r\n    lazyLoad: true,\r\n    infinite: movieList.length > 5,\r\n    speed: 500,\r\n    slidesToShow: 5,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  const getColor = (vote) => {\r\n    if (vote >= 8) return \"green\";\r\n    else if (vote >= 5 && vote < 8) return \"orange\";\r\n    else return \"red\";\r\n  };\r\n  const openModal = (event, movieId, modalType) => {\r\n    event.preventDefault();\r\n    setSelectedMovieId(movieId);\r\n    setSelectedModalType(modalType);\r\n    dialog.current.open();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DetailsModal\r\n        ref={dialog}\r\n        movieid={selectedMovieId}\r\n        type={type}\r\n        modalType={selectedModalType}\r\n      />\r\n      <div className={classes[\"container-carousel\"]}>\r\n        <Slider {...settings}>\r\n          {movieList.map((movie) => (\r\n            <div className={classes.movie} key={movie.id}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                alt=\"\"\r\n                title={type === \"movie\" ? movie.title : movie.name}\r\n                className={classes.image}\r\n              />\r\n\r\n              <div className={classes[\"movie-info\"]}>\r\n                <h3 className={classes.title}>\r\n                  {type === \"movie\" ? movie.title : movie.name}\r\n                </h3>\r\n                <span className={classes[`${getColor(movie.vote_average)}`]}>\r\n                  {movie.vote_average.toFixed(1)}\r\n                </span>\r\n              </div>\r\n\r\n              <Overview\r\n                movie={movie}\r\n                type={type}\r\n                onClick={(e) => openModal(e, movie.id, \"carouselModal\")}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Carousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}