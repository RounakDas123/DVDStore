{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasru\\\\Documents\\\\DVDStore_dev\\\\frontend\\\\src\\\\home\\\\pages\\\\SearchOverlay.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { motion, Variants } from 'framer-motion';\nimport { useSelector } from 'react-redux';\nimport classes from './Home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchOverlay() {\n  _s();\n  const showOverlay = useSelector(state => state.showSearchOverlay);\n  const searchOverlayText = splitStringUsingRegex(\"Please press Enter!\");\n  const charVariants = {\n    hidden: {\n      opacity: 0,\n      y: 10\n    },\n    // Add a slight translation for better visibility\n    reveal: {\n      opacity: 1,\n      y: 0\n    }\n  };\n  const containerVariants = {\n    hidden: {},\n    reveal: {\n      transition: {\n        staggerChildren: 0.05\n      }\n    }\n  };\n  console.log(searchOverlayText);\n  function splitStringUsingRegex(inputstring) {\n    const characters = [];\n    const regex = /[\\s\\S]/gu;\n    let match;\n    while ((match = regex.exec(inputstring)) != null) {\n      characters.push(match[0]);\n    }\n    return characters;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.overlay} ${showOverlay ? classes.active : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(motion.h1, {\n      initial: \"hidden\",\n      animate: \"reveal\",\n      variants: containerVariants,\n      className: classes[\"overlay-text\"],\n      children: searchOverlayText.map((char, index) => /*#__PURE__*/_jsxDEV(motion.span, {\n        transition: {\n          duration: 0.5\n        },\n        variants: charVariants,\n        children: char\n      }, `${char}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchOverlay, \"74bHmFum7DMSQ3gnC3ml1/CDCOs=\", false, function () {\n  return [useSelector];\n});\n_c = SearchOverlay;\n;\nexport default SearchOverlay;\nvar _c;\n$RefreshReg$(_c, \"SearchOverlay\");","map":{"version":3,"names":["React","motion","Variants","useSelector","classes","jsxDEV","_jsxDEV","SearchOverlay","_s","showOverlay","state","showSearchOverlay","searchOverlayText","splitStringUsingRegex","charVariants","hidden","opacity","y","reveal","containerVariants","transition","staggerChildren","console","log","inputstring","characters","regex","match","exec","push","className","overlay","active","children","h1","initial","animate","variants","map","char","index","span","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dasru/Documents/DVDStore_dev/frontend/src/home/pages/SearchOverlay.js"],"sourcesContent":["import React from 'react';\r\nimport {motion, Variants} from 'framer-motion';\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport classes from './Home.module.css';\r\n\r\nfunction SearchOverlay() {\r\n    const showOverlay = useSelector(state => state.showSearchOverlay);\r\n\r\n  const searchOverlayText = splitStringUsingRegex(\"Please press Enter!\");\r\n  const charVariants = {\r\n    hidden: { opacity: 0, y: 10 }, // Add a slight translation for better visibility\r\n    reveal: { opacity: 1, y: 0 }\r\n  }\r\n  const containerVariants = {\r\n    hidden: {},\r\n    reveal: { transition: { staggerChildren: 0.05 } }\r\n  };\r\n  console.log(searchOverlayText);\r\n\r\n  function splitStringUsingRegex(inputstring) {\r\n    const characters = [];\r\n    const regex = /[\\s\\S]/gu;\r\n  \r\n    let match;\r\n    while((match = regex.exec(inputstring)) != null)\r\n    {\r\n      characters.push(match[0]);\r\n    }\r\n    \r\n    return characters;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`${classes.overlay} ${showOverlay ? classes.active : \"\"}`}>\r\n\r\n      <motion.h1 initial=\"hidden\" animate=\"reveal\" variants={containerVariants} className={classes[\"overlay-text\"]}>\r\n        {searchOverlayText.map((char,index) => (\r\n          <motion.span key={`${char}-${index}`} transition={{duration:0.5}} variants={charVariants}>{char}</motion.span>\r\n        ))}\r\n      </motion.h1>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SearchOverlay;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAEC,QAAQ,QAAO,eAAe;AAC9C,SAASC,WAAW,QAAO,aAAa;AAExC,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,WAAW,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,iBAAiB,CAAC;EAEnE,MAAMC,iBAAiB,GAAGC,qBAAqB,CAAC,qBAAqB,CAAC;EACtE,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAG,CAAC;IAAE;IAC/BC,MAAM,EAAE;MAAEF,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE;EAC7B,CAAC;EACD,MAAME,iBAAiB,GAAG;IACxBJ,MAAM,EAAE,CAAC,CAAC;IACVG,MAAM,EAAE;MAAEE,UAAU,EAAE;QAAEC,eAAe,EAAE;MAAK;IAAE;EAClD,CAAC;EACDC,OAAO,CAACC,GAAG,CAACX,iBAAiB,CAAC;EAE9B,SAASC,qBAAqBA,CAACW,WAAW,EAAE;IAC1C,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,KAAK,GAAG,UAAU;IAExB,IAAIC,KAAK;IACT,OAAM,CAACA,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACJ,WAAW,CAAC,KAAK,IAAI,EAC/C;MACEC,UAAU,CAACI,IAAI,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B;IAEA,OAAOF,UAAU;EACnB;EAGA,oBACEnB,OAAA;IAAKwB,SAAS,EAAE,GAAG1B,OAAO,CAAC2B,OAAO,IAAItB,WAAW,GAAGL,OAAO,CAAC4B,MAAM,GAAG,EAAE,EAAG;IAAAC,QAAA,eAExE3B,OAAA,CAACL,MAAM,CAACiC,EAAE;MAACC,OAAO,EAAC,QAAQ;MAACC,OAAO,EAAC,QAAQ;MAACC,QAAQ,EAAElB,iBAAkB;MAACW,SAAS,EAAE1B,OAAO,CAAC,cAAc,CAAE;MAAA6B,QAAA,EAC1GrB,iBAAiB,CAAC0B,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAChClC,OAAA,CAACL,MAAM,CAACwC,IAAI;QAA0BrB,UAAU,EAAE;UAACsB,QAAQ,EAAC;QAAG,CAAE;QAACL,QAAQ,EAAEvB,YAAa;QAAAmB,QAAA,EAAEM;MAAI,GAA7E,GAAGA,IAAI,IAAIC,KAAK,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyE,CAC9G;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACtC,EAAA,CAtCQD,aAAa;EAAA,QACEJ,WAAW;AAAA;AAAA4C,EAAA,GAD1BxC,aAAa;AAsCrB;AAED,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}